// Copyright 2004, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.4.4.1
// Schema file: 火车头采集复制配制.xsd
// Creation Date: 2014-1-27 16:28:29
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;

namespace 火车头采集复制配制
{

	public struct Declarations
	{
		public const string SchemaVersion = "火车头采集复制配制";
	}


	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class ReplaceItemCollection : ArrayList
	{
		public ReplaceItem Add(ReplaceItem obj)
		{
			base.Add(obj);
			return obj;
		}

		public ReplaceItem Add()
		{
			return Add(new ReplaceItem());
		}

		public void Insert(int index, ReplaceItem obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(ReplaceItem obj)
		{
			base.Remove(obj);
		}

		new public ReplaceItem this[int index]
		{
			get { return (ReplaceItem) base[index]; }
			set { base[index] = value; }
		}
	}



	[XmlRoot(ElementName="LocomotiveAcquisitionCopyConfiguration",Namespace=Declarations.SchemaVersion,IsNullable=false),Serializable]
	public class LocomotiveAcquisitionCopyConfiguration
	{

		[XmlElement(ElementName="Root",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Root;
		
		[XmlIgnore]
		public string Root
		{ 
			get { return __Root; }
			set { __Root = value; }
		}

		[XmlElement(ElementName="NeedToCopyJobID",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="int",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public int __NeedToCopyJobID;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __NeedToCopyJobIDSpecified;
		
		[XmlIgnore]
		public int NeedToCopyJobID
		{ 
			get { return __NeedToCopyJobID; }
			set { __NeedToCopyJobID = value; __NeedToCopyJobIDSpecified = true; }
		}

		[XmlElement(Type=typeof(ReplaceList),ElementName="ReplaceList",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ReplaceList __ReplaceList;
		
		[XmlIgnore]
		public ReplaceList ReplaceList
		{
			get
			{
				if (__ReplaceList == null) __ReplaceList = new ReplaceList();		
				return __ReplaceList;
			}
			set {__ReplaceList = value;}
		}

		public LocomotiveAcquisitionCopyConfiguration()
		{
		}
	}


	[XmlType(TypeName="ReplaceList",Namespace=Declarations.SchemaVersion),Serializable]
	public class ReplaceList
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return ReplaceItemCollection.GetEnumerator();
		}

		public ReplaceItem Add(ReplaceItem obj)
		{
			return ReplaceItemCollection.Add(obj);
		}

		[XmlIgnore]
		public ReplaceItem this[int index]
		{
			get { return (ReplaceItem) ReplaceItemCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return ReplaceItemCollection.Count; }
        }

        public void Clear()
		{
			ReplaceItemCollection.Clear();
        }

		public ReplaceItem Remove(int index) 
		{ 
            ReplaceItem obj = ReplaceItemCollection[index];
            ReplaceItemCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            ReplaceItemCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(ReplaceItem),ElementName="ReplaceItem",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ReplaceItemCollection __ReplaceItemCollection;
		
		[XmlIgnore]
		public ReplaceItemCollection ReplaceItemCollection
		{
			get
			{
				if (__ReplaceItemCollection == null) __ReplaceItemCollection = new ReplaceItemCollection();
				return __ReplaceItemCollection;
			}
			set {__ReplaceItemCollection = value;}
		}

		public ReplaceList()
		{
		}
	}


	[XmlType(TypeName="ReplaceItem",Namespace=Declarations.SchemaVersion),Serializable]
	public class ReplaceItem
	{

		[XmlElement(ElementName="Key",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Key;
		
		[XmlIgnore]
		public string Key
		{ 
			get { return __Key; }
			set { __Key = value; }
		}

		[XmlElement(ElementName="Value",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Value;
		
		[XmlIgnore]
		public string @Value
		{ 
			get { return __Value; }
			set { __Value = value; }
		}

		[XmlElement(ElementName="UrlEnCode",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="boolean",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __UrlEnCode;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __UrlEnCodeSpecified;
		
		[XmlIgnore]
		public bool UrlEnCode
		{ 
			get { return __UrlEnCode; }
			set { __UrlEnCode = value; __UrlEnCodeSpecified = true; }
		}

		public ReplaceItem()
		{
		}
	}
}
