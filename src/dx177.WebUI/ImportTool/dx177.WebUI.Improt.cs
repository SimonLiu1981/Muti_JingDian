// Copyright 2004, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.4.4.1
// Schema file: Questions.xsd
// Creation Date: 2012-8-30 11:29:05
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;

namespace dx177.WebUI.Improt
{

	public struct Declarations
	{
		public const string SchemaVersion = "http://questions";
	}


	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class AddQuestionCollection : ArrayList
	{
		public AddQuestion Add(AddQuestion obj)
		{
			base.Add(obj);
			return obj;
		}

		public AddQuestion Add()
		{
			return Add(new AddQuestion());
		}

		public void Insert(int index, AddQuestion obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(AddQuestion obj)
		{
			base.Remove(obj);
		}

		new public AddQuestion this[int index]
		{
			get { return (AddQuestion) base[index]; }
			set { base[index] = value; }
		}
	}

	[Serializable]
	[EditorBrowsable(EditorBrowsableState.Advanced)]
	public class ReplyCollection : ArrayList
	{
		public Reply Add(Reply obj)
		{
			base.Add(obj);
			return obj;
		}

		public Reply Add()
		{
			return Add(new Reply());
		}

		public void Insert(int index, Reply obj)
		{
			base.Insert(index, obj);
		}

		public void Remove(Reply obj)
		{
			base.Remove(obj);
		}

		new public Reply this[int index]
		{
			get { return (Reply) base[index]; }
			set { base[index] = value; }
		}
	}



	[XmlRoot(ElementName="ImportQuestions",Namespace=Declarations.SchemaVersion,IsNullable=false),Serializable]
	public class ImportQuestions
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return AddQuestionCollection.GetEnumerator();
		}

		public AddQuestion Add(AddQuestion obj)
		{
			return AddQuestionCollection.Add(obj);
		}

		[XmlIgnore]
		public AddQuestion this[int index]
		{
			get { return (AddQuestion) AddQuestionCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return AddQuestionCollection.Count; }
        }

        public void Clear()
		{
			AddQuestionCollection.Clear();
        }

		public AddQuestion Remove(int index) 
		{ 
            AddQuestion obj = AddQuestionCollection[index];
            AddQuestionCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            AddQuestionCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(AddQuestion),ElementName="AddQuestion",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public AddQuestionCollection __AddQuestionCollection;
		
		[XmlIgnore]
		public AddQuestionCollection AddQuestionCollection
		{
			get
			{
				if (__AddQuestionCollection == null) __AddQuestionCollection = new AddQuestionCollection();
				return __AddQuestionCollection;
			}
			set {__AddQuestionCollection = value;}
		}

		public ImportQuestions()
		{
		}
	}


	[XmlType(TypeName="AddQuestion",Namespace=Declarations.SchemaVersion),Serializable]
	public class AddQuestion
	{

		[XmlElement(ElementName="Title",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Title;
		
		[XmlIgnore]
		public string Title
		{ 
			get { return __Title; }
			set { __Title = value; }
		}

		[XmlElement(ElementName="CreateDate",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="date",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public DateTime __CreateDate;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __CreateDateSpecified;
		
		[XmlIgnore]
		public DateTime CreateDate
		{ 
			get { return __CreateDate; }
			set { __CreateDate = value; __CreateDateSpecified = true; }
		}
		
		[XmlIgnore]
		public DateTime CreateDateUtc
		{ 
			get { return __CreateDate.ToUniversalTime(); }
			set { __CreateDate = value.ToLocalTime(); __CreateDateSpecified = true; }
		}

		[XmlElement(ElementName="Contents",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Contents;
		
		[XmlIgnore]
		public string Contents
		{ 
			get { return __Contents; }
			set { __Contents = value; }
		}

		[XmlElement(ElementName="JingQuCode",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __JingQuCode;
		
		[XmlIgnore]
		public string JingQuCode
		{ 
			get { return __JingQuCode; }
			set { __JingQuCode = value; }
		}

		[XmlElement(ElementName="Qtype",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __Qtype;
		
		[XmlIgnore]
		public string Qtype
		{ 
			get { return __Qtype; }
			set { __Qtype = value; }
		}

		[XmlElement(Type=typeof(Replys),ElementName="Replys",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public Replys __Replys;
		
		[XmlIgnore]
		public Replys Replys
		{
			get
			{
				if (__Replys == null) __Replys = new Replys();		
				return __Replys;
			}
			set {__Replys = value;}
		}

		public AddQuestion()
		{
			__CreateDate = DateTime.Now;
		}
	}


	[XmlType(TypeName="Replys",Namespace=Declarations.SchemaVersion),Serializable]
	public class Replys
	{
		[System.Runtime.InteropServices.DispIdAttribute(-4)]
		public IEnumerator GetEnumerator() 
		{
            return ReplyCollection.GetEnumerator();
		}

		public Reply Add(Reply obj)
		{
			return ReplyCollection.Add(obj);
		}

		[XmlIgnore]
		public Reply this[int index]
		{
			get { return (Reply) ReplyCollection[index]; }
		}

		[XmlIgnore]
        public int Count 
		{
            get { return ReplyCollection.Count; }
        }

        public void Clear()
		{
			ReplyCollection.Clear();
        }

		public Reply Remove(int index) 
		{ 
            Reply obj = ReplyCollection[index];
            ReplyCollection.Remove(obj);
			return obj;
        }

        public void Remove(object obj)
		{
            ReplyCollection.Remove(obj);
        }

		[XmlElement(Type=typeof(Reply),ElementName="Reply",IsNullable=false,Form=XmlSchemaForm.Qualified,Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public ReplyCollection __ReplyCollection;
		
		[XmlIgnore]
		public ReplyCollection ReplyCollection
		{
			get
			{
				if (__ReplyCollection == null) __ReplyCollection = new ReplyCollection();
				return __ReplyCollection;
			}
			set {__ReplyCollection = value;}
		}

		public Replys()
		{
		}
	}


	[XmlType(TypeName="Reply",Namespace=Declarations.SchemaVersion),Serializable]
	public class Reply
	{

		[XmlElement(ElementName="ReplyDate",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="date",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public DateTime __ReplyDate;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __ReplyDateSpecified;
		
		[XmlIgnore]
		public DateTime ReplyDate
		{ 
			get { return __ReplyDate; }
			set { __ReplyDate = value; __ReplyDateSpecified = true; }
		}
		
		[XmlIgnore]
		public DateTime ReplyDateUtc
		{ 
			get { return __ReplyDate.ToUniversalTime(); }
			set { __ReplyDate = value.ToLocalTime(); __ReplyDateSpecified = true; }
		}

		[XmlElement(ElementName="ReplyContents",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="string",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public string __ReplyContents;
		
		[XmlIgnore]
		public string ReplyContents
		{ 
			get { return __ReplyContents; }
			set { __ReplyContents = value; }
		}

		[XmlElement(ElementName="IsRight",IsNullable=false,Form=XmlSchemaForm.Qualified,DataType="boolean",Namespace=Declarations.SchemaVersion)]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __IsRight;
		
		[XmlIgnore]
		[EditorBrowsable(EditorBrowsableState.Advanced)]
		public bool __IsRightSpecified;
		
		[XmlIgnore]
		public bool IsRight
		{ 
			get { return __IsRight; }
			set { __IsRight = value; __IsRightSpecified = true; }
		}

		public Reply()
		{
			__ReplyDate = DateTime.Now;
		}
	}
}
